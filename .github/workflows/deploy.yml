name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to Fly.io'
        required: true
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  test:
    name: Run Tests
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: expense_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Verify Go version
      run: go version

    - name: Install dependencies
      run: go mod download

    - name: Run tests with race detection
      run: make test-silent
      env:
        DATABASE_URL: postgres://postgres:password@localhost:5432/expense_tracker_test?sslmode=disable

    - name: Run linter
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

    - name: Build application
      run: go build -o expense-tracker-bot ./cmd

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: expense-tracker-bot-${{ matrix.go-version }}-${{ matrix.os }}
        path: expense-tracker-bot

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: expense_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.x'

    - name: Install dependencies
      run: go mod download

    - name: Run tests with coverage
      run: go test -coverprofile=coverage.out -covermode=atomic ./...
      env:
        DATABASE_URL: postgres://postgres:password@localhost:5432/expense_tracker_test?sslmode=disable

    - name: Show coverage
      run: go tool cover -func=coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [test, coverage]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: expense-tracker-bot-1.23.x-ubuntu-latest
        path: .

    - name: Set up Flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io
      run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    - name: Health check
      run: |
        sleep 30
        flyctl status --app expense-tracker-bot

    - name: Notify deployment success
      run: |
        echo "‚úÖ Deployment completed successfully!"
        echo "üåê App URL: https://expense-tracker-bot.fly.dev"
        echo "üìä Health Check: https://expense-tracker-bot.fly.dev/health" 