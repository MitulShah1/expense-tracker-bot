name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to Fly.io'
        required: true
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  test:
    name: Run Tests
    strategy:
      matrix:
        go-version: [1.23.x, 1.24.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Verify Go version
      run: go version

    - name: Install dependencies
      run: go mod download

    - name: Run tests with race detection
      run: make test-silent

    - name: Run golangci-lint (v2)
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.1.0
        args: --verbose  

    - name: Build application
      run: go build -o expense-tracker-bot ./cmd

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: expense-tracker-bot-${{ matrix.go-version }}-${{ matrix.os }}
        path: expense-tracker-bot

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'

    - name: Install dependencies
      run: go mod download

    - name: Run tests with coverage
      run: go test -coverprofile=coverage.out -covermode=atomic ./...

    - name: Show coverage
      run: go tool cover -func=coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false 